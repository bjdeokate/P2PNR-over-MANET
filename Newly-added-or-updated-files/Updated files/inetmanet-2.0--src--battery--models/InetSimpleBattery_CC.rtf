{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f34\fbidi \froman\fcharset1\fprq2{\*\panose 02040503050406030204}Cambria Math;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f39\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f40\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f42\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f46\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f59\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}{\f60\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f62\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f65\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f66\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green176\blue80;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 
\ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused 
Normal Table;}}{\*\rsidtbl \rsid345825\rsid12255579}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator LENOVO}{\creatim\yr2022\mo9\dy9\hr19\min14}
{\revtim\yr2022\mo9\dy9\hr19\min21}{\version2}{\edmins7}{\nofpages10}{\nofwords2085}{\nofchars11885}{\nofcharsws13943}{\vern49169}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot345825 \nouicompat \fet0{\*\wgrffmtfilter 2450}\nofeaturethrottle1\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 /***************************************************************************

\par \hich\af2\dbch\af31505\loch\f2  * Simple battery model for inetmanet framework
\par \hich\af2\dbch\af31505\loch\f2  * Author:  Alfonso Ariza
\par \hich\af2\dbch\af31505\loch\f2  * Based in the mixim code Author:  Laura Marie Feeney
\par \hich\af2\dbch\af31505\loch\f2  *
\par \hich\af2\dbch\af31505\loch\f2  * Copyright 2009 Malaga University.
\par \hich\af2\dbch\af31505\loch\f2  * Copyright 2009 Swedish Institute of Computer Science.
\par \hich\af2\dbch\af31505\loch\f2  *
\par \hich\af2\dbch\af31505\loch\f2  * This software is provided `as is' and without any express or implied
\par \hich\af2\dbch\af31505\loch\f2  * warranties, including, but not limited to, the implied warranties of
\par \hich\af2\dbch\af31505\loch\f2  * merchantability and fitness for a particular purp\hich\af2\dbch\af31505\loch\f2 ose.
\par \hich\af2\dbch\af31505\loch\f2  *
\par \hich\af2\dbch\af31505\loch\f2  ***************************************************************************/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /*
\par \hich\af2\dbch\af31505\loch\f2  * A simple linear model of battery consumption.  Simple Battery
\par \hich\af2\dbch\af31505\loch\f2  * receives DrawMsg's from one or more devices, updates residual
\par \hich\af2\dbch\af31505\loch\f2  * capacity (total current * voltage\hich\af2\dbch\af31505\loch\f2  * time), publishes HostState
\par \hich\af2\dbch\af31505\loch\f2  * notification on battery depletion, and provides time series and
\par \hich\af2\dbch\af31505\loch\f2  * summary information to Battery Stats module.
\par \hich\af2\dbch\af31505\loch\f2  */
\par 
\par \hich\af2\dbch\af31505\loch\f2 #include "INETDefs.h"
\par 
\par \hich\af2\dbch\af31505\loch\f2 #include "RadioState.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "InetSimpleBattery.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "Energy.h"
\par \hich\af2\dbch\af31505\loch\f2 #include\hich\af2\dbch\af31505\loch\f2  "IPowerControl.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "ILifecycle.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "NodeOperations.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "NodeStatus.h"
\par \hich\af2\dbch\af31505\loch\f2 #include <string>     // std::string, std::to_string
\par \hich\af2\dbch\af31505\loch\f2 #include <iomanip>
\par 
\par \hich\af2\dbch\af31505\loch\f2 Define_Module(InetSimpleBattery);
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBattery::initialize(int stage)
\par \{
\par 
\par \hich\af2\dbch\af31505\loch\f2     BasicBattery::initialize(stage); //DO NOT DELETE!!
\par \hich\af2\dbch\af31505\loch\f2     if (stage == 0)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         voltage = par("voltage");
\par \hich\af2\dbch\af31505\loch\f2         nominalCapmAh = par("nominal");
\par \hich\af2\dbch\af31505\loch\f2         if (nominalCapmAh <= 0)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             error("invalid nominal capacity value");
\par \hich\af2\dbch\af31505\loch\f2       \hich\af2\dbch\af31505\loch\f2   \}
\par \hich\af2\dbch\af31505\loch\f2         capmAh = par("capacity");
\par 
\par \hich\af2\dbch\af31505\loch\f2         // Publish capacity to BatteryStats every publishTime (if > 0) and
\par \hich\af2\dbch\af31505\loch\f2         // whenever capacity has changed by publishDelta (if < 100%).
\par \hich\af2\dbch\af31505\loch\f2         publishTime = 0;
\par 
\par \hich\af2\dbch\af31505\loch\f2         publishDelta = 1;
\par \hich\af2\dbch\af31505\loch\f2         publishDelta\hich\af2\dbch\af31505\loch\f2  = par("publishDelta");
\par \hich\af2\dbch\af31505\loch\f2         if (publishDelta < 0 || publishDelta > 1)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             error("invalid publishDelta value");
\par \hich\af2\dbch\af31505\loch\f2         \}
\par 
\par \hich\af2\dbch\af31505\loch\f2         resolution = par("resolution");
\par \hich\af2\dbch\af31505\loch\f2         EV<< "capacity = " << capmAh << "mA-h (nominal = " << nominalCapmAh <<
\par \hich\af2\dbch\af31505\loch\f2         ") at " << voltage << "V" << endl;
\par \hich\af2\dbch\af31505\loch\f2         EV << "publishDelta = " << publishDelta * 100 << "%, publishTime = "
\par \hich\af2\dbch\af31505\loch\f2         << publishTime << "s, resolution = " << resolutio\hich\af2\dbch\af31505\loch\f2 n << "sec"
\par \hich\af2\dbch\af31505\loch\f2         << endl;
\par 
\par \hich\af2\dbch\af31505\loch\f2         capacity = capmAh * 60 * 60 * voltage; // use mW-sec internally
\par \hich\af2\dbch\af31505\loch\f2         nominalCapacity = nominalCapmAh * 60 * 60 * voltage;
\par 
\par \hich\af2\dbch\af31505\loch\f2         residualCapacity = lastPublishCapacity = capacity;
\par \hich\af2\dbch\af31505\loch\f2         lifetime = -1; // -1 means\hich\af2\dbch\af31505\loch\f2  not dead
\par 
\par \hich\af2\dbch\af31505\loch\f2         publishTime = par("publishTime");
\par \hich\af2\dbch\af31505\loch\f2         if (publishTime > 0)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             lastUpdateTime = simTime();
\par \hich\af2\dbch\af31505\loch\f2             publish = new cMessage("publish", PUBLISH);
\par \hich\af2\dbch\af31505\loch\f2             publish->setSchedulingPriority(2000);
\par \hich\af2\dbch\af31505\loch\f2             schedu\hich\af2\dbch\af31505\loch\f2 leAt(simTime() + publishTime, publish);
\par \hich\af2\dbch\af31505\loch\f2         \}
\par 
\par \hich\af2\dbch\af31505\loch\f2         mCurrEnergy = NULL;
\par \hich\af2\dbch\af31505\loch\f2         if (par("ConsumedVector"))
\par \hich\af2\dbch\af31505\loch\f2             mCurrEnergy = new cOutVector("Consumed");
\par \hich\af2\dbch\af31505\loch\f2         // DISable by default (use BatteryStats for data collection)
\par \hich\af2\dbch\af31505\loch\f2         residualVec.disable();
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid345825 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid345825 \hich\af2\dbch\af31505\loch\f2 //\hich\af2\dbch\af31505\loch\f2 Different values like \hich\af2\dbch\af31505\loch\f2 r}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid345825 
\hich\af2\dbch\af31505\loch\f2 esidualCapacity}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid345825 \hich\af2\dbch\af31505\loch\f2  is recorded and used to find the \hich\af2\dbch\af31505\loch\f2 // \hich\af2\dbch\af31505\loch\f2 route. 
\hich\af2\dbch\af31505\loch\f2  }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid345825 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 
\par \hich\af2\dbch\af31505\loch\f2         }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 residualVec.setName("residualCapacity");
\par \hich\af2\dbch\af31505\loch\f2         residualVec.record(residualCapacity);
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 
\par \hich\af2\dbch\af31505\loch\f2         }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 timeout = new cMessage("auto-update", AUTO_UPDATE);
\par \hich\af2\dbch\af31505\loch\f2         timeout->setSchedulingPriority(500);
\par \hich\af2\dbch\af31505\loch\f2         scheduleAt(simTime() + resolution, timeout);
\par \hich\af2\dbch\af31505\loch\f2         lastUpdateTime = simTime();
\par \hich\af2\dbch\af31505\loch\f2         WATCH(lastPublishCapacity);
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 int InetSimpleBattery::registerDevice(cObject *id, int numAccts)
\par \{
\par \hich\af2\dbch\af31505\loch\f2     for (unsigned int i = 0; i<deviceEntryVector.size()\hich\af2\dbch\af31505\loch\f2 ; i++)
\par \hich\af2\dbch\af31505\loch\f2         if (deviceEntryVector[i]->owner == id)
\par \hich\af2\dbch\af31505\loch\f2             error("device already registered!");
\par \hich\af2\dbch\af31505\loch\f2     if (numAccts < 1)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         error("number of activities must be at least 1");
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     DeviceEntry *device = new DeviceEntry();
\par \hich\af2\dbch\af31505\loch\f2     device->own\hich\af2\dbch\af31505\loch\f2 er = id;
\par \hich\af2\dbch\af31505\loch\f2     device->numAccts = numAccts;
\par \hich\af2\dbch\af31505\loch\f2     device->accts = new double[numAccts];
\par \hich\af2\dbch\af31505\loch\f2     device->times = new simtime_t[numAccts];
\par \hich\af2\dbch\af31505\loch\f2     for (int i = 0; i < numAccts; i++)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         device->accts[i] = 0.0;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     for (int i = 0; i < numAccts; i++)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         device->times[i] = 0.0;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     EV<< "initialized device "  << deviceEntryVector.size() << " with " << numAccts << " accounts" << endl;
\par \hich\af2\dbch\af31505\loch\f2     deviceEntryVector.push_back(device);
\par \hich\af2\dbch\af31505\loch\f2     return deviceEntryVector.size()-1;
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBattery::r\hich\af2\dbch\af31505\loch\f2 egisterWirelessDevice(int id, double mUsageRadioIdle, double mUsageRadioRecv, double mUsageRadioSend, double mUsageRadioSleep)
\par \{
\par \hich\af2\dbch\af31505\loch\f2     Enter_Method_Silent();
\par \hich\af2\dbch\af31505\loch\f2     if (deviceEntryMap.find(id)!=deviceEntryMap.end())
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         EV << "This device is register \\\hich\af2\dbch\af31505\loch\f2 n";
\par \hich\af2\dbch\af31505\loch\f2         return;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid345825 \hich\af2\dbch\af31505\loch\f2 // When each no\hich\af2\dbch\af31505\loch\f2 de joins the network, it share the battery status to \hich\af2\dbch\af31505\loch\f2 neighbor\hich\af2\dbch\af31505\loch\f2 
ing node, and that status is consider while resolving the route request. }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 
\par \hich\af2\dbch\af31505\loch\f2     }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 DeviceEntry *device = new DeviceEntry();
\par \hich\af2\dbch\af31505\loch\f2     const int N = 5;  // number of radio states  TODO symbolic name!!!
\par \hich\af2\dbch\af31505\loch\f2     device->numAccts = N;
\par \hich\af2\dbch\af31505\loch\f2     device->accts = new double[N];
\par \hich\af2\dbch\af31505\loch\f2     device->times = new simtime_t[N];
\par 
\par \hich\af2\dbch\af31505\loch\f2     ASSERT(RadioState::IDLE<N && RadioState::RECV<N && RadioState::TRANSMIT<N && RadioState::SLEEP<N && RadioState::OFF<N);
\par \hich\af2\dbch\af31505\loch\f2     device->radioUsageCurrent[RadioState::IDLE] = mUsageRadioIdle;
\par \hich\af2\dbch\af31505\loch\f2     device->radioUsageCurrent[RadioState::RECV] = mUsageRadioRecv\hich\af2\dbch\af31505\loch\f2 ;
\par \hich\af2\dbch\af31505\loch\f2     device->radioUsageCurrent[RadioState::TRANSMIT] = mUsageRadioSend;
\par \hich\af2\dbch\af31505\loch\f2     device->radioUsageCurrent[RadioState::SLEEP] = mUsageRadioSleep;
\par \hich\af2\dbch\af31505\loch\f2     device->radioUsageCurrent[RadioState::OFF] = 0;
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 
\par \hich\af2\dbch\af31505\loch\f2     for (int i = 0; i < N; i++)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         device->accts[i\hich\af2\dbch\af31505\loch\f2 ] = 0.0;
\par \hich\af2\dbch\af31505\loch\f2         device->times[i] = 0.0;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     deviceEntryMap.insert(std::pair<int,DeviceEntry*>(id, device));
\par \hich\af2\dbch\af31505\loch\f2     if (mustSubscribe)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         mpNb->subscribe(this, NF_RADIOSTATE_CHANGED);
\par \hich\af2\dbch\af31505\loch\f2         mustSubscribe = false;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBa\hich\af2\dbch\af31505\loch\f2 ttery::handleMessage(cMessage *msg)
\par \{
\par \hich\af2\dbch\af31505\loch\f2     if (msg->isSelfMessage())
\par \hich\af2\dbch\af31505\loch\f2     \{
\par 
\par \hich\af2\dbch\af31505\loch\f2         switch (msg->getKind())
\par \hich\af2\dbch\af31505\loch\f2         \{
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid345825 \hich\af2\dbch\af31505\loch\f2 // The residual energy is updated time interval. 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 \hich\af2\dbch\af31505\loch\f2         }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 case AUTO_UPDATE:
\par \hich\af2\dbch\af31505\loch\f2             // update the residual capacity (ongoing current draw)
\par \hich\af2\dbch\af31505\loch\f2             scheduleAt(simTime() + resolution, timeout);
\par \hich\af2\dbch\af31505\loch\f2             deductAndCheck();
\par \hich\af2\dbch\af31505\loch\f2             break;}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 
\par 
\par \hich\af2\dbch\af31505\loch\f2         case PUBLISH:
\par \hich\af2\dbch\af31505\loch\f2             // publish the state to the BatteryStats module
\par \hich\af2\dbch\af31505\loch\f2             lastPublishCapacity = residualCapacity;
\par \hich\af2\dbch\af31505\loch\f2             sch\hich\af2\dbch\af31505\loch\f2 eduleAt(simTime() + publishTime, publish);
\par \hich\af2\dbch\af31505\loch\f2             break;
\par 
\par \hich\af2\dbch\af31505\loch\f2         default:
\par \hich\af2\dbch\af31505\loch\f2             error("battery receives mysterious timeout");
\par \hich\af2\dbch\af31505\loch\f2             break;
\par \hich\af2\dbch\af31505\loch\f2         \}
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     else
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         error("unexpected message");
\par \hich\af2\dbch\af31505\loch\f2         delete msg;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 vo\hich\af2\dbch\af31505\loch\f2 id InetSimpleBattery::finish()
\par \{
\par \hich\af2\dbch\af31505\loch\f2     // do a final update of battery capacity
\par \hich\af2\dbch\af31505\loch\f2     deductAndCheck();
\par \hich\af2\dbch\af31505\loch\f2     deviceEntryMap.clear();
\par \hich\af2\dbch\af31505\loch\f2     deviceEntryVector.clear();
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBattery::receiveChangeNotification(int aCategory, const cObject* aDetails)
\par \{
\par \hich\af2\dbch\af31505\loch\f2     Enter_Method_Silent();
\par \hich\af2\dbch\af31505\loch\f2     //EV << "[Battery]: receiveChangeNotification" << endl;
\par \hich\af2\dbch\af31505\loch\f2     if (aCategory == NF_RADIOSTATE_CHANGED)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         const RadioState *rs = check_and_cast<const RadioState *>(aDetails);
\par 
\par \hich\af2\dbch\af31505\loch\f2         DeviceEntryMap::iterator it = dev\hich\af2\dbch\af31505\loch\f2 iceEntryMap.find(rs->getRadioId());
\par \hich\af2\dbch\af31505\loch\f2         if (it==deviceEntryMap.end())
\par \hich\af2\dbch\af31505\loch\f2             return;
\par 
\par \hich\af2\dbch\af31505\loch\f2         if (rs->getState()>=it->second->numAccts)
\par \hich\af2\dbch\af31505\loch\f2             opp_error("Error in battery states");
\par 
\par \hich\af2\dbch\af31505\loch\f2         double current = it->second->radioUsageCurrent[rs->g\hich\af2\dbch\af31505\loch\f2 etState()];
\par 
\par \hich\af2\dbch\af31505\loch\f2         EV << simTime() << " wireless device " << rs->getRadioId() << " draw current " << current <<
\par \hich\af2\dbch\af31505\loch\f2         "mA, new state = " << rs->getState() << "\\n";
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid345825 \hich\af2\dbch\af31505\loch\f2  }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 // }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid345825 
\hich\af2\dbch\af31505\loch\f2 T}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 he residual capacit}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid345825 \hich\af2\dbch\af31505\loch\f2 y is updated. }{\rtlch\fcs1 
\af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 
\par \hich\af2\dbch\af31505\loch\f2         deductAndCheck();
\par 
\par \hich\af2\dbch\af31505\loch\f2         // set the new current draw in the device vector
\par \hich\af2\dbch\af31505\loch\f2         it->second->draw = current;
\par \hich\af2\dbch\af31505\loch\f2         it->second->currentActivity = rs->getState();
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBattery::draw(int deviceID, DrawAmount& amount, int activi\hich\af2\dbch\af31505\loch\f2 ty)
\par \{
\par \hich\af2\dbch\af31505\loch\f2     if (amount.getType() == DrawAmount::CURRENT)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par 
\par \hich\af2\dbch\af31505\loch\f2         double current = amount.getValue();
\par \hich\af2\dbch\af31505\loch\f2         if (activity < 0 && current != 0)
\par \hich\af2\dbch\af31505\loch\f2             error("invalid CURRENT message");
\par 
\par \hich\af2\dbch\af31505\loch\f2         EV << simTime() << " device " << deviceID <<
\par \hich\af2\dbch\af31505\loch\f2         \hich\af2\dbch\af31505\loch\f2 " draw current " << current <<
\par \hich\af2\dbch\af31505\loch\f2         "mA, activity = " << activity << endl;
\par 
\par \hich\af2\dbch\af31505\loch\f2         // update the residual capacity (finish previous current draw)
\par \hich\af2\dbch\af31505\loch\f2         deductAndCheck();
\par 
\par \hich\af2\dbch\af31505\loch\f2         // set the new current draw in the device vector
\par \hich\af2\dbch\af31505\loch\f2         deviceEntryVec\hich\af2\dbch\af31505\loch\f2 tor[deviceID]->draw = current;
\par \hich\af2\dbch\af31505\loch\f2         deviceEntryVector[deviceID]->currentActivity = activity;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid345825 
\par \hich\af2\dbch\af31505\loch\f2 // Energy cost for different kind of message is considered to calculate total energy consumption. 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 \hich\af2\dbch\af31505\loch\f2     }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid12255579 \hich\af2\dbch\af31505\loch\f2 else if (amount.getType() == DrawAmount::ENERGY)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         double energy = amount.getValue();
\par \hich\af2\dbch\af31505\loch\f2         if (!(activity >= 0 && activity < deviceEntryVector[deviceID]->numAccts))
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             error("invalid activity specified");
\par \hich\af2\dbch\af31505\loch\f2         \}
\par 
\par \hich\af2\dbch\af31505\loch\f2         EV << simTime() << " device " << deviceID <<  " deduct " << energy <<
\par \hich\af2\dbch\af31505\loch\f2         " mW-s, activity =\hich\af2\dbch\af31505\loch\f2  " << activity << endl;
\par 
\par \hich\af2\dbch\af31505\loch\f2         // deduct a fixed energy cost
\par \hich\af2\dbch\af31505\loch\f2         deviceEntryVector[deviceID]->accts[activity] += energy;
\par \hich\af2\dbch\af31505\loch\f2         residualCapacity -= energy;
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 \hich\af2\dbch\af31505\loch\f2         // update the residual capacity (ongoing current draw), mostly
\par \hich\af2\dbch\af31505\loch\f2         // to check w\hich\af2\dbch\af31505\loch\f2 hether to publish (or perish)
\par \hich\af2\dbch\af31505\loch\f2         deductAndCheck();
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     else
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         error("Unknown power type!");
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 /**
\par \hich\af2\dbch\af31505\loch\f2  *  Function to update the display string with the remaining energy
\par \hich\af2\dbch\af31505\loch\f2  */
\par \hich\af2\dbch\af31505\loch\f2 InetSimpleBattery::~InetSimpleBattery()
\par \{
\par \hich\af2\dbch\af31505\loch\f2     while (!deviceEntryMap.empty())
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         delete deviceEntryMap.begin()->second;
\par \hich\af2\dbch\af31505\loch\f2         deviceEntryMap.erase(deviceEntryMap.begin());
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     while (!deviceEntryVector.empty())
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         delete deviceEntryVector.back();
\par \hich\af2\dbch\af31505\loch\f2         deviceEntryV\hich\af2\dbch\af31505\loch\f2 ector.pop_back();
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     if (mCurrEnergy)
\par \hich\af2\dbch\af31505\loch\f2         delete mCurrEnergy;
\par 
\par \hich\af2\dbch\af31505\loch\f2     if (publish)
\par \hich\af2\dbch\af31505\loch\f2         cancelAndDelete(publish);
\par \hich\af2\dbch\af31505\loch\f2     if (timeout)
\par \hich\af2\dbch\af31505\loch\f2         cancelAndDelete(timeout);
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBattery::deductAndCheck()
\par \{
\par \hich\af2\dbch\af31505\loch\f2     // already depleted, devices s\hich\af2\dbch\af31505\loch\f2 hould have stopped sending drawMsg,
\par \hich\af2\dbch\af31505\loch\f2     // but we catch any leftover messages in queue
\par \hich\af2\dbch\af31505\loch\f2     if (residualCapacity <= 0)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         return;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     simtime_t now = simTime();
\par 
\par \hich\af2\dbch\af31505\loch\f2     // If device[i] has never drawn current (e.g. because the device
\par \hich\af2\dbch\af31505\loch\f2     // hasn't been used yet or only uses ENERGY) the currentActivity is
\par \hich\af2\dbch\af31505\loch\f2     // still -1.  If the device is not drawing current at the moment,
\par \hich\af2\dbch\af31505\loch\f2     // draw has been reset to 0, so energy is also 0.  (It might perhaps
\par \hich\af2\dbch\af31505\loch\f2     // be wise to guard more carefully ag\hich\af2\dbch\af31505\loch\f2 ainst fp issues later.)
\par 
\par \hich\af2\dbch\af31505\loch\f2     for (unsigned int i = 0; i < deviceEntryVector.size(); i++)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         int currentActivity = deviceEntryVector[i]->currentActivity;
\par \hich\af2\dbch\af31505\loch\f2         if (currentActivity > -1)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             double energy = deviceEntryVector[i]\hich\af2\dbch\af31505\loch\f2 ->draw * voltage * (now - lastUpdateTime).dbl();
\par \hich\af2\dbch\af31505\loch\f2             if (energy > 0)
\par \hich\af2\dbch\af31505\loch\f2             \{
\par \hich\af2\dbch\af31505\loch\f2                 deviceEntryVector[i]->accts[currentActivity] += energy;
\par \hich\af2\dbch\af31505\loch\f2                 deviceEntryVector[i]->times[currentActivity] += (now - lastUpdateTime);
\par \hich\af2\dbch\af31505\loch\f2      \hich\af2\dbch\af31505\loch\f2            residualCapacity -= energy;
\par \hich\af2\dbch\af31505\loch\f2             \}
\par \hich\af2\dbch\af31505\loch\f2         \}
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     for (DeviceEntryMap::iterator it = deviceEntryMap.begin(); it!=deviceEntryMap.end(); it++)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         int currentActivity = it->second->currentActivity;
\par \hich\af2\dbch\af31505\loch\f2         if (currentActivity > -1)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             double energy = it->second->draw * voltage * (now - lastUpdateTime).dbl();
\par \hich\af2\dbch\af31505\loch\f2             if (energy > 0)
\par \hich\af2\dbch\af31505\loch\f2             \{
\par \hich\af2\dbch\af31505\loch\f2                 it->second->accts[currentActivity] += energy;
\par \hich\af2\dbch\af31505\loch\f2                 it->s\hich\af2\dbch\af31505\loch\f2 econd->times[currentActivity] += (now - lastUpdateTime);
\par \hich\af2\dbch\af31505\loch\f2                 residualCapacity -= energy;
\par \hich\af2\dbch\af31505\loch\f2             \}
\par \hich\af2\dbch\af31505\loch\f2         \}
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2     lastUpdateTime = now;
\par 
\par \hich\af2\dbch\af31505\loch\f2     std::ostringstream resCap;
\par 
\par \hich\af2\dbch\af31505\loch\f2     resCap << std::setprecision(10) << residualCapacity;
\par 
\par \hich\af2\dbch\af31505\loch\f2     EV\hich\af2\dbch\af31505\loch\f2  << "residual capacity = " << residualCapacity << " " << resCap.str() <<"\\n";
\par 
\par \hich\af2\dbch\af31505\loch\f2     cDisplayString* display_string = &getParentModule()->getDisplayString();
\par 
\par \hich\af2\dbch\af31505\loch\f2     // battery is depleted
\par \hich\af2\dbch\af31505\loch\f2     if (residualCapacity <= 0.0 )
\par \hich\af2\dbch\af31505\loch\f2     \{
\par 
\par \hich\af2\dbch\af31505\loch\f2         EV << "[BATTERY]: " << getParentModule()->getFullName() <<" 's battery exhausted, stop simulation" << "\\n";
\par \hich\af2\dbch\af31505\loch\f2         display_string->setTagArg("i", 1, "#ff0000");
\par \hich\af2\dbch\af31505\loch\f2         disableComponents();
\par \hich\af2\dbch\af31505\loch\f2         if (par("endSimulationIfexhausted").boolValue())
\par \hich\af2\dbch\af31505\loch\f2             endSimulation();
\par \hich\af2\dbch\af31505\loch\f2         disableComponents();
\par \hich\af2\dbch\af31505\loch\f2         lastPublishCapacity = residualCapacity;
\par \hich\af2\dbch\af31505\loch\f2         cancelEvent(timeout);
\par \hich\af2\dbch\af31505\loch\f2         cancelEvent(publish);
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     // battery is not depleted, continue
\par \hich\af2\dbch\af31505\loch\f2     else
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         // publish the batt\hich\af2\dbch\af31505\loch\f2 ery capacity if it changed by more than delta
\par \hich\af2\dbch\af31505\loch\f2         if ((lastPublishCapacity - residualCapacity)/capacity >= publishDelta)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             lastPublishCapacity = residualCapacity;
\par \hich\af2\dbch\af31505\loch\f2             Energy* p_ene = new Energy(residualCapacity);
\par \hich\af2\dbch\af31505\loch\f2            \hich\af2\dbch\af31505\loch\f2  mpNb->fireChangeNotification(NF_BATTERY_CHANGED, p_ene);
\par \hich\af2\dbch\af31505\loch\f2             delete p_ene;
\par 
\par \hich\af2\dbch\af31505\loch\f2             display_string->setTagArg("i", 1, "#000000"); // black coloring
\par \hich\af2\dbch\af31505\loch\f2             EV << "[BATTERY]: " << getParentModule()->getFullName() << " 's battery energy left\hich\af2\dbch\af31505\loch\f2 : " << lastPublishCapacity  << "%" << "\\n";
\par \hich\af2\dbch\af31505\loch\f2             //char buf[3];
\par 
\par \hich\af2\dbch\af31505\loch\f2         \}
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     residualVec.record(residualCapacity);
\par \hich\af2\dbch\af31505\loch\f2     if (mCurrEnergy)
\par \hich\af2\dbch\af31505\loch\f2         mCurrEnergy->record(capacity-residualCapacity);
\par \}
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 static void disableRecursive(cModule *curmod)
\par \{
\par \hich\af2\dbch\af31505\loch\f2     for (cModule::SubmoduleIterator i(curmod); !i.end(); i++)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         cModule *submod = i();
\par \hich\af2\dbch\af31505\loch\f2         IPowerControl *power = dynamic_cast<IPowerControl*>(submod);
\par \hich\af2\dbch\af31505\loch\f2         ILifecycle *power2 = dynamic_cast<ILifecycle*>(submod);
\par \hich\af2\dbch\af31505\loch\f2         if (power)
\par \hich\af2\dbch\af31505\loch\f2   \hich\af2\dbch\af31505\loch\f2           power->disableModule();
\par 
\par \hich\af2\dbch\af31505\loch\f2         if (power2)
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             NodeCrashOperation op;
\par \hich\af2\dbch\af31505\loch\f2             power2->handleOperationStage(&op, NodeStartOperation::STAGE_LOCAL, NULL);
\par \hich\af2\dbch\af31505\loch\f2         \}
\par \hich\af2\dbch\af31505\loch\f2         disableRecursive(submod);
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af31505\loch\f2 void InetSimpleBa\hich\af2\dbch\af31505\loch\f2 ttery::disableComponents()
\par \{
\par \hich\af2\dbch\af31505\loch\f2     // search all IPowerControl components in the node and disable them
\par \hich\af2\dbch\af31505\loch\f2     for (cModule *curmod = getParentModule(); curmod; curmod= curmod->getParentModule())
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         cProperties *props = curmod->getProperties();
\par \hich\af2\dbch\af31505\loch\f2         if (props && props->getAsBool("node"))
\par \hich\af2\dbch\af31505\loch\f2         \{
\par \hich\af2\dbch\af31505\loch\f2             disableRecursive(curmod);
\par \hich\af2\dbch\af31505\loch\f2             break;
\par \hich\af2\dbch\af31505\loch\f2         \}
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \}
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12255579 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210030dd4329a8060000a41b0000160000007468656d652f7468656d652f
7468656d65312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87
615b8116d8a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad
79482a9c0498f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b
5d8a314d3c94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab
999fb7b4717509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9
699640f6719e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd586
8b37a088d1e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d6
0cf03ac1a5193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f
9e7ef3f2d117d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be
15c308d3f28acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a9979
3849c26ae66252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d
32a423279a668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2a
f074481847bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86
e877f0034e16bafb0e258ebb4faf06b769e888340b103d331115bebc4eb813bf83291b63624a0d1475a756c734f9bbc2cd28546ecbe1e20a3794ca175f3fae90
fb6d2dd99bb07b55e5ccf68942bd0877b23c77b908e8db5f9db7f024d9239010f35bd4bbe2fcae387bfff9e2bc289f2fbe24cfaa301468dd8bd846dbb4ddf1c2
ae7b4c191ba8292337a469bc25ec3d411f06f53a73e224c5292c8de0516732307070a1c0660d125c7d44553488700a4d7bddd3444299910e254ab984c3a219ae
a4adf1d0f82b7bd46cea4388ad1c12ab5d1ed8e1153d9c9f350a3246aad01c6873462b9ac05999ad5cc988826eafc3acae853a33b7ba11cd1445875ba1b236b1
399483c90bd560b0b0263435085a21b0f22a9cf9356b38ec6046026d77eba3dc2dc60b17e92219e180643ed27acffba86e9c94c7ca9c225a0f1b0cfae0788ad5
4adc5a9aec1b703b8b93caec1a0bd8e5de7b132fe5113cf312503b998e2c2927274bd051db6b35979b1ef271daf6c6704e86c73805af4bdd476216c26593af84
0dfb5393d964f9cc9bad5c313709ea70f561ed3ea7b053075221d51696910d0d339585004b34272bff7213cc7a510a5454a3b349b1b206c1f0af490176745d4b
c663e2abb2b34b23da76f6352ba57ca2881844c1111ab189d8c7e07e1daaa04f40255c77988aa05fe06e4e5bdb4cb9c5394bbaf28d98c1d971ccd20867e556a7
689ec9166e0a522183792b8907ba55ca6e943bbf2a26e52f48957218ffcf54d1fb09dc3eac04da033e5c0d0b8c74a6b43d2e54c4a10aa511f5fb021a07533b20
5ae07e17a621a8e082dafc17e450ffb739676998b48643a4daa7211214f623150942f6a02c99e83b85583ddbbb2c4996113211551257a656ec1139246ca86be0
aadedb3d1441a89b6a929501833b197fee7b9641a3503739e57c732a59b1f7da1cf8a73b1f9bcca0945b874d4393dbbf10b1680f66bbaa5d6f96e77b6f59113d
316bb31a795600b3d256d0cad2fe354538e7566b2bd69cc6cbcd5c38f0e2bcc63058344429dc2121fd07f63f2a7c66bf76e80d75c8f7a1b622f878a18941d840
545fb28d07d205d20e8ea071b283369834296bdaac75d256cb37eb0bee740bbe278cad253b8bbfcf69eca23973d939b97891c6ce2cecd8da8e2d343578f6648a
c2d0383fc818c798cf64e52f597c740f1cbd05df0c264c49134cf09d4a60e8a107260f20f92d47b374e32f000000ffff0300504b030414000600080000002100
0dd1909fb60000001b010000270000007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f7
8277086f6fd3ba109126dd88d0add40384e4350d363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89
d93b64b060828e6f37ed1567914b284d262452282e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd500
1996509affb3fd381a89672f1f165dfe514173d9850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0f
bfff0000001c0200001300000000000000000000000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6
a7e7c0000000360100000b00000000000000000000000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a
0000001c00000000000000000000000000190200007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d00140006000800000021
0030dd4329a8060000a41b00001600000000000000000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d001400060008
00000021000dd1909fb60000001b0100002700000000000000000000000000b20900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000ad0a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;
\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;
\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdpriority1 \lsdlocked0 Default Paragraph Font;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e500000000000000000000000040b0
d03853c4d801feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}