{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f34\fbidi \froman\fcharset1\fprq2{\*\panose 02040503050406030204}Cambria Math;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f39\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f40\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f42\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f46\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f59\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}{\f60\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f62\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f65\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f66\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green176\blue80;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 
\ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused 
Normal Table;}}{\*\rsidtbl \rsid9921237\rsid16471844}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator LENOVO}{\creatim\yr2022\mo9\dy9\hr19\min43}
{\revtim\yr2022\mo9\dy9\hr19\min44}{\version2}{\edmins1}{\nofpages13}{\nofwords2754}{\nofchars15703}{\nofcharsws18421}{\vern49169}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot9921237 \nouicompat \fet0{\*\wgrffmtfilter 2450}\nofeaturethrottle1\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16471844 \hich\af2\dbch\af31505\loch\f2 /***************************************************************************

\par \hich\af2\dbch\af31505\loch\f2  *   Copyright (C) 2004 by Francisco J. Ros                                *
\par \hich\af2\dbch\af31505\loch\f2  *   fjrm@dif.um.es                                                        *
\par \hich\af2\dbch\af31505\loch\f2  *                                                                         *
\par \hich\af2\dbch\af31505\loch\f2  *   This program is free software; you can redistribute it and/or modify  *
\par \hich\af2\dbch\af31505\loch\f2  *   it under the terms of the GNU General Public License as published by  *
\par \hich\af2\dbch\af31505\loch\f2  *   the Free Software Fo\hich\af2\dbch\af31505\loch\f2 undation; either version 2 of the License, or     *
\par \hich\af2\dbch\af31505\loch\f2  *   (at your option) any later version.                                   *
\par \hich\af2\dbch\af31505\loch\f2  *                                                                         *
\par \hich\af2\dbch\af31505\loch\f2  *   This program is distributed in the hope that \hich\af2\dbch\af31505\loch\f2 it will be useful,       *
\par \hich\af2\dbch\af31505\loch\f2  *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
\par \hich\af2\dbch\af31505\loch\f2  *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
\par \hich\af2\dbch\af31505\loch\f2  *   GNU General Public License for more details.                          \hich\af2\dbch\af31505\loch\f2 *
\par \hich\af2\dbch\af31505\loch\f2  *                                                                         *
\par \hich\af2\dbch\af31505\loch\f2  *   You should have received a copy of the GNU General Public License     *
\par \hich\af2\dbch\af31505\loch\f2  *   along with this program; if not, write to the                         *
\par \hich\af2\dbch\af31505\loch\f2  *   Free Software Foun\hich\af2\dbch\af31505\loch\f2 dation, Inc.,                                       *
\par \hich\af2\dbch\af31505\loch\f2  *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
\par \hich\af2\dbch\af31505\loch\f2  ***************************************************************************/
\par 
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 /// \\file   OLSR.h
\par \hich\af2\dbch\af31505\loch\f2 /// \\brief  Header file\hich\af2\dbch\af31505\loch\f2  for OLSR agent and related classes.
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 /// Here are defined all timers used by OLSR, including those for managing internal
\par \hich\af2\dbch\af31505\loch\f2 /// state and those for sending messages. Class OLSR is also defined, therefore this
\par \hich\af2\dbch\af31505\loch\f2 /// file has signatures for the most important\hich\af2\dbch\af31505\loch\f2  methods. Lots of constants are also
\par \hich\af2\dbch\af31505\loch\f2 /// defined.
\par \hich\af2\dbch\af31505\loch\f2 ///
\par 
\par \hich\af2\dbch\af31505\loch\f2 #ifndef __OLSR_omnet_h__
\par 
\par \hich\af2\dbch\af31505\loch\f2 #define __OLSR_omnet_h__
\par \hich\af2\dbch\af31505\loch\f2 #include "ManetRoutingBase.h"
\par 
\par \hich\af2\dbch\af31505\loch\f2 #include "OLSRpkt_m.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "OLSR_state.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "OLSR_rtable.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "OLSR_repositories.h"
\par \hich\af2\dbch\af31505\loch\f2 #include "opp_utils.h"
\par 
\par \hich\af2\dbch\af31505\loch\f2 #include <map>
\par \hich\af2\dbch\af31505\loch\f2 #include <vector>
\par 
\par \hich\af2\dbch\af31505\loch\f2 #include <assert.h>
\par 
\par 
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /********** Useful macros **********/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Returns maximum of two numbers.
\par \hich\af2\dbch\af31505\loch\f2 #ifndef MAX
\par \hich\af2\dbch\af31505\loch\f2 #define MAX(a, b) (((a) > (b)) ? (a) : (b))
\par \hich\af2\dbch\af31505\loch\f2 #endif
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Returns minimum of two numbers.
\par \hich\af2\dbch\af31505\loch\f2 #ifndef MIN
\par \hich\af2\dbch\af31505\loch\f2 #define MIN(a, b) (((a) < (b)) ? (a) : (b))
\par \hich\af2\dbch\af31505\loch\f2 #endif
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Defines NULL as zero, used for pointers.
\par \hich\af2\dbch\af31505\loch\f2 #ifndef NULL
\par \hich\af2\dbch\af31505\loch\f2 #define NULL 0
\par \hich\af2\dbch\af31505\loch\f2 #endif
\par 
\par \hich\af2\dbch\af31505\loch\f2 #define IP_BROADCAST     ((uint32_t) 0xffffffff)
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Gets current time from the scheduler.
\par \hich\af2\dbch\af31505\loch\f2 #ifndef CURRENT_TIME
\par \hich\af2\dbch\af31505\loch\f2 #define CURRENT_TIME    SIMTIME_DBL(simTime())
\par \hich\af2\dbch\af31505\loch\f2 #endif
\par 
\par \hich\af2\dbch\af31505\loch\f2 #ifndef CURRENT_TIME_T
\par \hich\af2\dbch\af31505\loch\f2 #define CURRENT_TIME_T  SIMTIME_DBL(simTime())
\par \hich\af2\dbch\af31505\loch\f2 #endif
\par 
\par \hich\af2\dbch\af31505\loch\f2 #define debug  EV << OPP_Global::stringf
\par 
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 /// \\brief Gets the delay between a given time and the\hich\af2\dbch\af31505\loch\f2  current time.
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 /// If given time is previous to the current one, then this macro returns
\par \hich\af2\dbch\af31505\loch\f2 /// a number close to 0. This is used for scheduling events at a certain moment.
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 #define DELAY(time) (((time) < (CURRENT_TIME)) ? (0.000001) : \\
\par \hich\af2\dbch\af31505\loch\f2     (time - CURRENT_TIME + 0.000001))
\par 
\par \hich\af2\dbch\af31505\loch\f2 #define DELAY_T(time) (((time) < (CURRENT_TIME_T)) ? (0.000001) : \\
\par \hich\af2\dbch\af31505\loch\f2     (time - CURRENT_TIME_T + 0.000001))
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Scaling factor used in RFC 3626.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_C      0.0625
\par 
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 /********** Holding times **********/
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 /// Neighbor holding time.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_NEIGHB_HOLD_TIME   3 * OLSR_REFRESH_INTERVAL
\par \tab \hich\af2\dbch\af31505\loch\f2 /// Top holding time.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_TOP_HOLD_TIME  3 * tc_ival()
\par \tab \hich\af2\dbch\af31505\loch\f2 /// Dup holding time.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_DUP_HOLD_TIME  30
\par \tab \hich\af2\dbch\af31505\loch\f2 /// MID holding time.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_MID_HOLD_TIME  3\hich\af2\dbch\af31505\loch\f2  * mid_ival()
\par 
\par \hich\af2\dbch\af31505\loch\f2 /********** Link types **********/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Unspecified link type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_UNSPEC_LINK    0
\par \hich\af2\dbch\af31505\loch\f2 /// Asymmetric link type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_ASYM_LINK      1
\par \hich\af2\dbch\af31505\loch\f2 /// Symmetric link type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_SYM_LINK       2
\par \hich\af2\dbch\af31505\loch\f2 /// Lost link type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_LOST_LINK      3
\par 
\par \hich\af2\dbch\af31505\loch\f2 /********** Neighbor types **********/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Not neighbor type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_NOT_NEIGH      0
\par \hich\af2\dbch\af31505\loch\f2 /// Symmetric neighbor type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_SYM_NEIGH      1
\par \hich\af2\dbch\af31505\loch\f2 /// Asymmetric neighbor type.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_MPR_NEIGH      2
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /**********\hich\af2\dbch\af31505\loch\f2  Willingness **********/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Willingness for forwarding packets from other nodes: never.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_WILL_NEVER     0
\par \hich\af2\dbch\af31505\loch\f2 /// Willingness for forwarding packets from other nodes: low.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_WILL_LOW       1
\par \hich\af2\dbch\af31505\loch\f2 /// Willingness for forwarding packets from \hich\af2\dbch\af31505\loch\f2 other nodes: medium.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_WILL_DEFAULT   3
\par \hich\af2\dbch\af31505\loch\f2 /// Willingness for forwarding packets from other nodes: high.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_WILL_HIGH      6
\par \hich\af2\dbch\af31505\loch\f2 /// Willingness for forwarding packets from other nodes: always.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_WILL_ALWAYS    7
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /********** Miscellaneous constants **********/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Maximum allowed jitter.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_MAXJITTER      hello_ival()/4
\par \hich\af2\dbch\af31505\loch\f2 /// Maximum allowed sequence number.
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_MAX_SEQ_NUM    65535
\par \hich\af2\dbch\af31505\loch\f2 /// Used to set status of an OLSR_nb_tuple as "not symmetric".
\par \hich\af2\dbch\af31505\loch\f2 #d\hich\af2\dbch\af31505\loch\f2 efine OLSR_STATUS_NOT_SYM 0
\par \hich\af2\dbch\af31505\loch\f2 /// Used to set status of an OLSR_nb_tuple as "symmetric".
\par \hich\af2\dbch\af31505\loch\f2 #define OLSR_STATUS_SYM     1
\par \hich\af2\dbch\af31505\loch\f2 /// Random number between [0-OLSR_MAXJITTER] used to jitter OLSR packet transmission.
\par \hich\af2\dbch\af31505\loch\f2 //#define JITTER            (Random::uniform()*OLSR_M\hich\af2\dbch\af31505\loch\f2 AXJITTER)
\par 
\par \hich\af2\dbch\af31505\loch\f2 class OLSR;         // forward declaration
\par 
\par \hich\af2\dbch\af31505\loch\f2 /********** Timers **********/
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Basic timer class
\par 
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_Timer :  public cOwnedObject /*cMessage*/
\par \{
\par \hich\af2\dbch\af31505\loch\f2   protected:
\par \hich\af2\dbch\af31505\loch\f2     OLSR*       agent_; ///< OLSR agent which created the timer.
\par \hich\af2\dbch\af31505\loch\f2     cObject* \hich\af2\dbch\af31505\loch\f2 tuple_;
\par \hich\af2\dbch\af31505\loch\f2   public:
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void removeTimer();
\par \hich\af2\dbch\af31505\loch\f2     OLSR_Timer(OLSR* agent);
\par \hich\af2\dbch\af31505\loch\f2     OLSR_Timer();
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_Timer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire() = 0;
\par \hich\af2\dbch\af31505\loch\f2     virtual void removeQueueTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void resched(double time);
\par \hich\af2\dbch\af31505\loch\f2     virtual void setTuple(cObject *tuple) \{tuple_ = tuple;\}
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for sending an enqued message.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_MsgTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_MsgTimer(OLSR* agent) : OLSR_Timer(agent) \{\}
\par \hich\af2\dbch\af31505\loch\f2     OLSR_MsgTimer():OLSR_Timer() \{\}
\par \hich\af2\dbch\af31505\loch\f2     void\hich\af2\dbch\af31505\loch\f2  expire();
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid9921237 \hich\af2\dbch\af31505\loch\f2 //}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid16471844 \hich\af2\dbch\af31505\loch\f2  Timer for sending HELLO messages.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_HelloTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_HelloTimer(OLSR* agent) : OLSR_Timer(agent) \{\}
\par \hich\af2\dbch\af31505\loch\f2     OLSR_HelloTimer():OLSR_Timer() \{\}
\par \hich\af2\dbch\af31505\loch\f2     void expire();
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16471844 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for sending TC messages.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_TcTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_TcTimer(OLSR* agent) : OLSR_Timer(agent) \{\}
\par \hich\af2\dbch\af31505\loch\f2     OLSR_TcTimer():OLSR_Timer() \{\}
\par \hich\af2\dbch\af31505\loch\f2     void expire();
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for sending MID messages.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_MidTimer : \hich\af2\dbch\af31505\loch\f2 public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_MidTimer(OLSR* agent) : OLSR_Timer(agent) \{\}
\par \hich\af2\dbch\af31505\loch\f2     OLSR_MidTimer():OLSR_Timer() \{\}
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for removing duplicate tuples: OLSR_dup_tuple.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_DupTupleTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2 //  protected:
\par \hich\af2\dbch\af31505\loch\f2 //  OLSR_dup_tuple* tuple_;
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_DupTupleTimer(OLSR* agent, OLSR_dup_tuple* tuple) : OLSR_Timer(agent)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         tuple_ = tuple;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     void setTuple(OLSR_dup_tuple* tuple) \{tuple_ = tuple; tuple->asocTimer = this;\}
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_DupTupleTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for removing link tuples: OLSR_link_tuple.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_LinkTupleTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_LinkTupleTimer(OLSR* agent, OLSR_link_tuple* tuple);
\par 
\par \hich\af2\dbch\af31505\loch\f2     void setTuple(OLSR_l\hich\af2\dbch\af31505\loch\f2 ink_tuple* tuple) \{tuple_ = tuple; tuple->asocTimer = this;\}
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_LinkTupleTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par \hich\af2\dbch\af31505\loch\f2   protected:
\par \hich\af2\dbch\af31505\loch\f2     //OLSR_link_tuple*  tuple_; ///< OLSR_link_tuple which must be removed.
\par \hich\af2\dbch\af31505\loch\f2     bool            first_time_;
\par 
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer fo\hich\af2\dbch\af31505\loch\f2 r removing nb2hop tuples: OLSR_nb2hop_tuple.
\par 
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_Nb2hopTupleTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_Nb2hopTupleTimer(OLSR* agent, OLSR_nb2hop_tuple* tuple) : OLSR_Timer(agent)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         tuple_ = tuple;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     void setTuple(OLSR_nb2hop_tuple* tuple) \{tuple_ = tuple; tuple->asocTimer = this;\}
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_Nb2hopTupleTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par \hich\af2\dbch\af31505\loch\f2 //  protected:
\par \hich\af2\dbch\af31505\loch\f2 //  OLSR_nb2hop_tuple*  tuple_; ///< OLSR_link_tuple which must be removed.
\par 
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par 
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for\hich\af2\dbch\af31505\loch\f2  removing MPR selector tuples: OLSR_mprsel_tuple.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_MprSelTupleTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_MprSelTupleTimer(OLSR* agent, OLSR_mprsel_tuple* tuple) : OLSR_Timer(agent)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         tuple_ = tuple;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     void setTuple(OLSR_mprsel_tuple* tuple) \{tuple_ = tuple; tuple->asocTimer = this;\}
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_MprSelTupleTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par 
\par \hich\af2\dbch\af31505\loch\f2 //  protected:
\par \hich\af2\dbch\af31505\loch\f2 //  OLSR_mprsel_tuple*  tuple_; ///< OLSR_link_tuple which must be removed.
\par 
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for \hich\af2\dbch\af31505\loch\f2 removing topology tuples: OLSR_topology_tuple.
\par 
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_TopologyTupleTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_TopologyTupleTimer(OLSR* agent, OLSR_topology_tuple* tuple) : OLSR_Timer(agent)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         tuple_ = tuple;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     void setTuple(OL\hich\af2\dbch\af31505\loch\f2 SR_topology_tuple* tuple) \{tuple_ = tuple; tuple->asocTimer = this;\}
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_TopologyTupleTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par \hich\af2\dbch\af31505\loch\f2 //  protected:
\par \hich\af2\dbch\af31505\loch\f2 //  OLSR_topology_tuple*    tuple_; ///< OLSR_link_tuple which must be removed.
\par 
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par \hich\af2\dbch\af31505\loch\f2 /// Timer for removing interface association tuples: OLSR_iface_assoc_tuple.
\par \hich\af2\dbch\af31505\loch\f2 class OLSR_IfaceAssocTupleTimer : public OLSR_Timer
\par \{
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR_IfaceAssocTupleTimer(OLSR* agent, OLSR_iface_assoc_tuple* tuple) : OLSR_Timer(agent)
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         tuple_ \hich\af2\dbch\af31505\loch\f2 = tuple;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     void setTuple(OLSR_iface_assoc_tuple* tuple) \{tuple_ = tuple; tuple->asocTimer = this;\}
\par \hich\af2\dbch\af31505\loch\f2     ~OLSR_IfaceAssocTupleTimer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void expire();
\par \hich\af2\dbch\af31505\loch\f2 //  protected:
\par \hich\af2\dbch\af31505\loch\f2 //  OLSR_iface_assoc_tuple* tuple_; ///< OLSR_link_tuple which must be r\hich\af2\dbch\af31505\loch\f2 emoved.
\par 
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par \hich\af2\dbch\af31505\loch\f2 /********** OLSR Agent **********/
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 /// \\brief Routing agent which implements %OLSR protocol following RFC 3626.
\par \hich\af2\dbch\af31505\loch\f2 ///
\par \hich\af2\dbch\af31505\loch\f2 /// Interacts with TCL interface through command() method. It implements all
\par \hich\af2\dbch\af31505\loch\f2 /// functionalities related to sending and r\hich\af2\dbch\af31505\loch\f2 eceiving packets and managing
\par \hich\af2\dbch\af31505\loch\f2 /// internal state.
\par \hich\af2\dbch\af31505\loch\f2 ///
\par 
\par \hich\af2\dbch\af31505\loch\f2 typedef std::set<OLSR_Timer *> TimerPendingList;
\par \hich\af2\dbch\af31505\loch\f2 typedef std::multimap <simtime_t, OLSR_Timer *> TimerQueue;
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2 class OLSR : public ManetRoutingBase
\par \{
\par \hich\af2\dbch\af31505\loch\f2   protected:
\par \hich\af2\dbch\af31505\loch\f2     /********** Intervals **********/
\par \hich\af2\dbch\af31505\loch\f2     ///
\par \hich\af2\dbch\af31505\loch\f2     /// \\brief Period at which a node must cite every link and every neighbor.
\par \hich\af2\dbch\af31505\loch\f2     ///
\par \hich\af2\dbch\af31505\loch\f2     /// We only use this value in order to define OLSR_NEIGHB_HOLD_TIME.
\par \hich\af2\dbch\af31505\loch\f2     ///
\par \hich\af2\dbch\af31505\loch\f2     double OLSR_REFRESH_INTERVAL;//   2
\par 
\par \hich\af2\dbch\af31505\loch\f2     double jitter() \{return uniform(0,(\hich\af2\dbch\af31505\loch\f2 double)OLSR_MAXJITTER);\}
\par \hich\af2\dbch\af31505\loch\f2 #define JITTER jitter()
\par 
\par \hich\af2\dbch\af31505\loch\f2   private:
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_HelloTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_TcTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_MidTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_DupTupleTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_LinkTupleTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_N\hich\af2\dbch\af31505\loch\f2 b2hopTupleTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_MprSelTupleTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_TopologyTupleTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_IfaceAssocTupleTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_MsgTimer;
\par \hich\af2\dbch\af31505\loch\f2     friend class OLSR_Timer;
\par \hich\af2\dbch\af31505\loch\f2   protected:
\par 
\par \hich\af2\dbch\af31505\loch\f2     //std::priority_queue<TimerQueueElem> *timerQueuePtr;
\par \hich\af2\dbch\af31505\loch\f2     bool topologyChange;
\par \hich\af2\dbch\af31505\loch\f2     virtual void setTopologyChanged(bool p) \{topologyChange = p;\}
\par \hich\af2\dbch\af31505\loch\f2     virtual bool getTopologyChanged() \{return topologyChange;\}
\par \hich\af2\dbch\af31505\loch\f2     TimerQueue *timerQueuePtr;
\par 
\par \hich\af2\dbch\af31505\loch\f2     cMessage\hich\af2\dbch\af31505\loch\f2  *timerMessage;
\par 
\par \hich\af2\dbch\af31505\loch\f2 // must be protected and used for dereved class OLSR_ETX
\par \hich\af2\dbch\af31505\loch\f2     /// A list of pending messages which are buffered awaiting for being sent.
\par \hich\af2\dbch\af31505\loch\f2     std::vector<OLSR_msg>   msgs_;
\par \hich\af2\dbch\af31505\loch\f2     /// Routing table.
\par \hich\af2\dbch\af31505\loch\f2     OLSR_rtable     rtable_;
\par 
\par \hich\af2\dbch\af31505\loch\f2     typedef std\hich\af2\dbch\af31505\loch\f2 ::map<nsaddr_t,OLSR_rtable*> GlobalRtable;
\par \hich\af2\dbch\af31505\loch\f2     static GlobalRtable globalRtable;
\par \hich\af2\dbch\af31505\loch\f2     typedef std::map<nsaddr_t,std::vector<nsaddr_t> > DistributionPath;
\par \hich\af2\dbch\af31505\loch\f2     static DistributionPath distributionPath;
\par \hich\af2\dbch\af31505\loch\f2     bool computed;
\par \hich\af2\dbch\af31505\loch\f2     /// Internal state with all needed\hich\af2\dbch\af31505\loch\f2  data structs.
\par 
\par \hich\af2\dbch\af31505\loch\f2     OLSR_state      *state_ptr;
\par 
\par \hich\af2\dbch\af31505\loch\f2     /// Packets sequence number counter.
\par \hich\af2\dbch\af31505\loch\f2     uint16_t    pkt_seq_;
\par \hich\af2\dbch\af31505\loch\f2     /// Messages sequence number counter.
\par \hich\af2\dbch\af31505\loch\f2     uint16_t    msg_seq_;
\par \hich\af2\dbch\af31505\loch\f2     /// Advertised Neighbor Set sequence number.
\par \hich\af2\dbch\af31505\loch\f2     uint16_t    ansn_;
\par 
\par \hich\af2\dbch\af31505\loch\f2     /// HELLO messages' emission interval.
\par \hich\af2\dbch\af31505\loch\f2     cPar     *hello_ival_;
\par \hich\af2\dbch\af31505\loch\f2     /// TC messages' emission interval.
\par \hich\af2\dbch\af31505\loch\f2     cPar     *tc_ival_;
\par \hich\af2\dbch\af31505\loch\f2     /// MID messages' emission interval.
\par \hich\af2\dbch\af31505\loch\f2     cPar     *mid_ival_;
\par \hich\af2\dbch\af31505\loch\f2     /// Willingness for forwarding packets on behalf of\hich\af2\dbch\af31505\loch\f2  other nodes.
\par \hich\af2\dbch\af31505\loch\f2     cPar     *willingness_;
\par \hich\af2\dbch\af31505\loch\f2     /// Determines if layer 2 notifications are enabled or not.
\par \hich\af2\dbch\af31505\loch\f2     int     use_mac_;
\par \hich\af2\dbch\af31505\loch\f2     bool useIndex;
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2     /// Address of the routing agent.
\par \hich\af2\dbch\af31505\loch\f2     nsaddr_t ra_addr_;
\par 
\par \hich\af2\dbch\af31505\loch\f2     bool optimizedMid;
\par 
\par \hich\af2\dbch\af31505\loch\f2   protected:
\par \hich\af2\dbch\af31505\loch\f2 // Omnet\hich\af2\dbch\af31505\loch\f2  INET vaiables and functions
\par \hich\af2\dbch\af31505\loch\f2     char nodeName[50];
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual OLSR_pkt * check_packet(cPacket*, nsaddr_t &, int &);
\par 
\par \hich\af2\dbch\af31505\loch\f2     // PortClassifier*  dmux_;      ///< For passing packets up to agents.
\par \hich\af2\dbch\af31505\loch\f2     // Trace*       logtarget_; ///< For logging.
\par 
\par \hich\af2\dbch\af31505\loch\f2     OLSR_HelloTimer *helloTimer;    ///< Timer for sending HELLO messages.
\par \hich\af2\dbch\af31505\loch\f2     OLSR_TcTimer    *tcTimer;   ///< Timer for sending TC messages.
\par \hich\af2\dbch\af31505\loch\f2     OLSR_MidTimer   *midTimer;  ///< Timer for sending MID messages.
\par 
\par \hich\af2\dbch\af31505\loch\f2 #define hello_timer_  (*helloTimer)
\par \hich\af2\dbch\af31505\loch\f2 #define\hich\af2\dbch\af31505\loch\f2   tc_timer_  (*tcTimer)
\par \hich\af2\dbch\af31505\loch\f2 #define mid_timer_  (*midTimer)
\par 
\par \hich\af2\dbch\af31505\loch\f2     /// Increments packet sequence number and returns the new value.
\par \hich\af2\dbch\af31505\loch\f2     inline uint16_t pkt_seq()
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         pkt_seq_ = (pkt_seq_ + 1)%(OLSR_MAX_SEQ_NUM + 1);
\par \hich\af2\dbch\af31505\loch\f2         return pkt_seq_;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par \hich\af2\dbch\af31505\loch\f2     /\hich\af2\dbch\af31505\loch\f2 // Increments message sequence number and returns the new value.
\par \hich\af2\dbch\af31505\loch\f2     inline uint16_t msg_seq()
\par \hich\af2\dbch\af31505\loch\f2     \{
\par \hich\af2\dbch\af31505\loch\f2         msg_seq_ = (msg_seq_ + 1)%(OLSR_MAX_SEQ_NUM + 1);
\par \hich\af2\dbch\af31505\loch\f2         return msg_seq_;
\par \hich\af2\dbch\af31505\loch\f2     \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     inline nsaddr_t    ra_addr()   \{ return ra_addr_;\}
\par 
\par \hich\af2\dbch\af31505\loch\f2     inline double     hello_ival()    \{ return hello_ival_->doubleValue();\}
\par \hich\af2\dbch\af31505\loch\f2     inline double     tc_ival()   \{ return tc_ival_->doubleValue();\}
\par \hich\af2\dbch\af31505\loch\f2     inline double     mid_ival()  \{ return mid_ival_->doubleValue();\}
\par \hich\af2\dbch\af31505\loch\f2     inline int     willingness()   \{ retu\hich\af2\dbch\af31505\loch\f2 rn willingness_->longValue();\}
\par \hich\af2\dbch\af31505\loch\f2     inline int     use_mac()   \{ return use_mac_;\}
\par 
\par \hich\af2\dbch\af31505\loch\f2     inline linkset_t&   linkset()   \{ return state_ptr->linkset(); \}
\par \hich\af2\dbch\af31505\loch\f2     inline mprset_t&    mprset()    \{ return state_ptr->mprset(); \}
\par \hich\af2\dbch\af31505\loch\f2     inline mprselset_t& mprselset() \{\hich\af2\dbch\af31505\loch\f2  return state_ptr->mprselset(); \}
\par \hich\af2\dbch\af31505\loch\f2     inline nbset_t&     nbset()     \{ return state_ptr->nbset(); \}
\par \hich\af2\dbch\af31505\loch\f2     inline nb2hopset_t& nb2hopset() \{ return state_ptr->nb2hopset(); \}
\par \hich\af2\dbch\af31505\loch\f2     inline topologyset_t&   topologyset()   \{ return state_ptr->topologyset(); \}
\par \hich\af2\dbch\af31505\loch\f2   \hich\af2\dbch\af31505\loch\f2   inline dupset_t&    dupset()    \{ return state_ptr->dupset(); \}
\par \hich\af2\dbch\af31505\loch\f2     inline ifaceassocset_t& ifaceassocset() \{ return state_ptr->ifaceassocset(); \}
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void        recv_olsr(cMessage*);
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void        CoverTwoHopNeighbors(const nsaddr_t\hich\af2\dbch\af31505\loch\f2  &neighborMainAddr, nb2hopset_t & N2);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        mpr_computation();
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rtable_computation();
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual bool        process_hello(OLSR_msg&, const nsaddr_t &, const nsaddr_t &, const int &);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool        proc\hich\af2\dbch\af31505\loch\f2 ess_tc(OLSR_msg&, const nsaddr_t &, const int &);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        process_mid(OLSR_msg&, const nsaddr_t &, const int &);
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void        forward_default(OLSR_msg&, OLSR_dup_tuple*, const nsaddr_t &, const nsaddr_t &);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        forward_data(cMessage* p) \{\}
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void        enque_msg(OLSR_msg&, double);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        send_hello();
\par \hich\af2\dbch\af31505\loch\f2     virtual void        send_tc();
\par \hich\af2\dbch\af31505\loch\f2     virtual void        send_mid();
\par \hich\af2\dbch\af31505\loch\f2     virtual void        send_pkt();
\par 
\par \hich\af2\dbch\af31505\loch\f2   \hich\af2\dbch\af31505\loch\f2   virtual bool        link_sensing(OLSR_msg&, const nsaddr_t &, const nsaddr_t &, const int &);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool        populate_nbset(OLSR_msg&);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool        populate_nb2hopset(OLSR_msg&);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        populate_mprselset(OLSR_msg&);
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void        set_hello_timer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void        set_tc_timer();
\par \hich\af2\dbch\af31505\loch\f2     virtual void        set_mid_timer();
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void        nb_loss(OLSR_link_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        add_dup_tuple(OLSR_dup_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void      \hich\af2\dbch\af31505\loch\f2   rm_dup_tuple(OLSR_dup_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        add_link_tuple(OLSR_link_tuple*, uint8_t);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rm_link_tuple(OLSR_link_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        updated_link_tuple(OLSR_link_tuple*, uint8_t willingness);
\par \hich\af2\dbch\af31505\loch\f2     virtual void\hich\af2\dbch\af31505\loch\f2         add_nb_tuple(OLSR_nb_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rm_nb_tuple(OLSR_nb_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        add_nb2hop_tuple(OLSR_nb2hop_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rm_nb2hop_tuple(OLSR_nb2hop_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        add_mprsel_tuple(O\hich\af2\dbch\af31505\loch\f2 LSR_mprsel_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rm_mprsel_tuple(OLSR_mprsel_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        add_topology_tuple(OLSR_topology_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rm_topology_tuple(OLSR_topology_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        add_ifaceassoc_tuple(OLSR_iface_assoc_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void        rm_ifaceassoc_tuple(OLSR_iface_assoc_tuple*);
\par \hich\af2\dbch\af31505\loch\f2     virtual OLSR_nb_tuple*    find_or_add_nb(OLSR_link_tuple*, uint8_t willingness);
\par 
\par \hich\af2\dbch\af31505\loch\f2     const nsaddr_t  & get_mai\hich\af2\dbch\af31505\loch\f2 n_addr(const nsaddr_t&) const;
\par \hich\af2\dbch\af31505\loch\f2     virtual int     degree(OLSR_nb_tuple*);
\par 
\par \hich\af2\dbch\af31505\loch\f2     static bool seq_num_bigger_than(uint16_t, uint16_t);
\par \hich\af2\dbch\af31505\loch\f2     virtual int numInitStages() const  \{return 5;\}
\par \hich\af2\dbch\af31505\loch\f2     virtual void initialize(int stage);
\par \hich\af2\dbch\af31505\loch\f2     virtual void    mac_failed(I\hich\af2\dbch\af31505\loch\f2 Pv4Datagram*);
\par \hich\af2\dbch\af31505\loch\f2     virtual void    recv(cMessage *p) \{\}
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual void handleMessage(cMessage *msg);
\par \hich\af2\dbch\af31505\loch\f2     virtual void finish();
\par \hich\af2\dbch\af31505\loch\f2     //virtual void processPromiscuous(const cObject *details)\{\};
\par \hich\af2\dbch\af31505\loch\f2     virtual void processLinkBreak(const cObject *details);
\par \hich\af2\dbch\af31505\loch\f2  \hich\af2\dbch\af31505\loch\f2    virtual void scheduleNextEvent();
\par 
\par \hich\af2\dbch\af31505\loch\f2     ManetAddress getIfaceAddressFromIndex(int index);
\par 
\par \hich\af2\dbch\af31505\loch\f2     const char * getNodeId(const nsaddr_t &addr);
\par 
\par \hich\af2\dbch\af31505\loch\f2     void computeDistributionPath(const nsaddr_t &initNode);
\par 
\par \hich\af2\dbch\af31505\loch\f2   public:
\par \hich\af2\dbch\af31505\loch\f2     OLSR() \{\}
\par \hich\af2\dbch\af31505\loch\f2     virtual ~OLSR();
\par 
\par 
\par \hich\af2\dbch\af31505\loch\f2     static double       emf_to_seconds(uint8_t);
\par \hich\af2\dbch\af31505\loch\f2     static uint8_t      seconds_to_emf(double);
\par \hich\af2\dbch\af31505\loch\f2     static int      node_id(const nsaddr_t&);
\par 
\par \hich\af2\dbch\af31505\loch\f2     }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid16471844 \hich\af2\dbch\af31505\loch\f2 // Routing \hich\af2\dbch\af31505\loch\f2 information access}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid9921237 
\hich\af2\dbch\af31505\loch\f2  is checked. }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid16471844 
\par \hich\af2\dbch\af31505\loch\f2     virtual bool supportGetRoute() \{return true;\}
\par \hich\af2\dbch\af31505\loch\f2     virtual uint32_t getRout\hich\af2\dbch\af31505\loch\f2 e(const ManetAddress &, std::vector<ManetAddress> &);
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16471844 \hich\af2\dbch\af31505\loch\f2     virtual bool getNextHop(const ManetAddress &, ManetAddress &add, int &iface, double &);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool isProactive();
\par \hich\af2\dbch\af31505\loch\f2     virtual void setRefreshRoute(const ManetAddress &destination, const ManetA\hich\af2\dbch\af31505\loch\f2 ddress & nextHop,bool isReverse) \{\}
\par \hich\af2\dbch\af31505\loch\f2     virtual bool isOurType(cPacket *);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool getDestAddress(cPacket *, ManetAddress &);
\par \hich\af2\dbch\af31505\loch\f2     virtual int getRouteGroup(const AddressGroup &gr, std::vector<ManetAddress>&);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool getNextHopGroup(const\hich\af2\dbch\af31505\loch\f2  AddressGroup &gr, ManetAddress &add, int &iface, ManetAddress&);
\par \hich\af2\dbch\af31505\loch\f2     virtual int  getRouteGroup(const ManetAddress&, std::vector<ManetAddress> &, ManetAddress&, bool &, int group = 0);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool getNextHopGroup(const ManetAddress&, ManetAddress &ad\hich\af2\dbch\af31505\loch\f2 d, int &iface, ManetAddress&, bool &, int group = 0);
\par 
\par \hich\af2\dbch\af31505\loch\f2     //
\par \hich\af2\dbch\af31505\loch\f2     virtual void getDistributionPath(const ManetAddress&, std::vector<ManetAddress> &path);
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual bool isNodeCandidate(const ManetAddress&);
\par 
\par \hich\af2\dbch\af31505\loch\f2     virtual bool handleNodeStart(IDoneCallbac\hich\af2\dbch\af31505\loch\f2 k *doneCallback);
\par \hich\af2\dbch\af31505\loch\f2     virtual bool handleNodeShutdown(IDoneCallback *doneCallback);
\par \hich\af2\dbch\af31505\loch\f2     virtual void handleNodeCrash();
\par 
\par \}\hich\af2\dbch\af31505\loch\f2 ;
\par 
\par \hich\af2\dbch\af31505\loch\f2 #endif
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16471844 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210030dd4329a8060000a41b0000160000007468656d652f7468656d652f
7468656d65312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87
615b8116d8a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad
79482a9c0498f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b
5d8a314d3c94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab
999fb7b4717509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9
699640f6719e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd586
8b37a088d1e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d6
0cf03ac1a5193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f
9e7ef3f2d117d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be
15c308d3f28acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a9979
3849c26ae66252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d
32a423279a668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2a
f074481847bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86
e877f0034e16bafb0e258ebb4faf06b769e888340b103d331115bebc4eb813bf83291b63624a0d1475a756c734f9bbc2cd28546ecbe1e20a3794ca175f3fae90
fb6d2dd99bb07b55e5ccf68942bd0877b23c77b908e8db5f9db7f024d9239010f35bd4bbe2fcae387bfff9e2bc289f2fbe24cfaa301468dd8bd846dbb4ddf1c2
ae7b4c191ba8292337a469bc25ec3d411f06f53a73e224c5292c8de0516732307070a1c0660d125c7d44553488700a4d7bddd3444299910e254ab984c3a219ae
a4adf1d0f82b7bd46cea4388ad1c12ab5d1ed8e1153d9c9f350a3246aad01c6873462b9ac05999ad5cc988826eafc3acae853a33b7ba11cd1445875ba1b236b1
399483c90bd560b0b0263435085a21b0f22a9cf9356b38ec6046026d77eba3dc2dc60b17e92219e180643ed27acffba86e9c94c7ca9c225a0f1b0cfae0788ad5
4adc5a9aec1b703b8b93caec1a0bd8e5de7b132fe5113cf312503b998e2c2927274bd051db6b35979b1ef271daf6c6704e86c73805af4bdd476216c26593af84
0dfb5393d964f9cc9bad5c313709ea70f561ed3ea7b053075221d51696910d0d339585004b34272bff7213cc7a510a5454a3b349b1b206c1f0af490176745d4b
c663e2abb2b34b23da76f6352ba57ca2881844c1111ab189d8c7e07e1daaa04f40255c77988aa05fe06e4e5bdb4cb9c5394bbaf28d98c1d971ccd20867e556a7
689ec9166e0a522183792b8907ba55ca6e943bbf2a26e52f48957218ffcf54d1fb09dc3eac04da033e5c0d0b8c74a6b43d2e54c4a10aa511f5fb021a07533b20
5ae07e17a621a8e082dafc17e450ffb739676998b48643a4daa7211214f623150942f6a02c99e83b85583ddbbb2c4996113211551257a656ec1139246ca86be0
aadedb3d1441a89b6a929501833b197fee7b9641a3503739e57c732a59b1f7da1cf8a73b1f9bcca0945b874d4393dbbf10b1680f66bbaa5d6f96e77b6f59113d
316bb31a795600b3d256d0cad2fe354538e7566b2bd69cc6cbcd5c38f0e2bcc63058344429dc2121fd07f63f2a7c66bf76e80d75c8f7a1b622f878a18941d840
545fb28d07d205d20e8ea071b283369834296bdaac75d256cb37eb0bee740bbe278cad253b8bbfcf69eca23973d939b97891c6ce2cecd8da8e2d343578f6648a
c2d0383fc818c798cf64e52f597c740f1cbd05df0c264c49134cf09d4a60e8a107260f20f92d47b374e32f000000ffff0300504b030414000600080000002100
0dd1909fb60000001b010000270000007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f7
8277086f6fd3ba109126dd88d0add40384e4350d363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89
d93b64b060828e6f37ed1567914b284d262452282e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd500
1996509affb3fd381a89672f1f165dfe514173d9850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0f
bfff0000001c0200001300000000000000000000000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6
a7e7c0000000360100000b00000000000000000000000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a
0000001c00000000000000000000000000190200007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d00140006000800000021
0030dd4329a8060000a41b00001600000000000000000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d001400060008
00000021000dd1909fb60000001b0100002700000000000000000000000000b20900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000ad0a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;
\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;
\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdpriority1 \lsdlocked0 Default Paragraph Font;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e50000000000000000000000006044
456c56c4d801feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}